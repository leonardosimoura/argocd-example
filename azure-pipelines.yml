# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: Build
    variables: 
    - group: tech-talk
    steps:
    - checkout: self 
      clean: true
      persistCredentials: true

    - task: CmdLine@2
      displayName: Docker Login
      inputs:
        script: |
          docker login -u $(gitlab_user) -p $(gitlab_password) registry.gitlab.com

    - task: CmdLine@2
      displayName: Docker PreRequisites
      inputs:
        script: |
            docker run --privileged --rm tonistiigi/binfmt --install all

    - task: CmdLine@2
      displayName: "Docker Buildx Setup"
      inputs:
        script: 'docker buildx create --use'
   
    - task: CmdLine@2
      displayName: "Docker Build and Push Meu App"
      inputs:
        script: 'docker buildx build --push --platform linux/arm64/v8,linux/amd64 --file Dockerfile  --no-cache --tag registry.gitlab.com/leonardosimoura-pessoal/techtalk/meu-app:$(Build.BuildNumber) .'  
        
- stage: Release
  dependsOn: Build
  condition: succeeded('Build')
  jobs:
    - deployment: Release
      environment: Release
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self 
              clean: true
              persistCredentials: true

            - task: CmdLine@2
              displayName: "Git config"
              inputs:
                script: | 
                  git config --global user.email "$(git_email)"
                  git config --global user.name "$(git_name)"
              
            - task: CmdLine@2
              displayName: "Git checkout release"
              inputs:
                script: | 
                  git fetch
                  git checkout release/1.0
                workingDirectory: $(Build.Repository.LocalPath)
            
            - task: CmdLine@2
              displayName: "Git merge from main"
              inputs:
                script: | 
                  git merge origin/main
                workingDirectory: $(Build.Repository.LocalPath)

            - task: CmdLine@2
              displayName: "Git replace files"
              inputs:
                script: 'envsubst < "$(Build.Repository.LocalPath)/base/1.deployment.yml" > "$(Build.Repository.LocalPath)/git-ops/1.deployment.yml"'
              
            - task: CmdLine@2
              displayName: "Git add"
              inputs:
                script: 'git add git-ops/\*.yml'
                workingDirectory: $(Build.Repository.LocalPath)
                
            - task: CmdLine@2
              displayName: "Git commit"
              inputs:
                script: "git commit -m 'Release $(Build.BuildNumber)'"
                workingDirectory: $(Build.Repository.LocalPath)
            - task: CmdLine@2
              displayName: "Git push to release $(Build.BuildNumber)"
              inputs:
                script: 'git push'
                workingDirectory: $(Build.Repository.LocalPath)
